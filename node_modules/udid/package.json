{
  "name": "udid",
  "version": "0.1.4",
  "homepage": "https://github.com/dominictarr/udid",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/udid.git"
  },
  "dependencies": {
    "shasum": "~0.0",
    "count-tabs": "~0.2"
  },
  "devDependencies": {},
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "browser": "./browser.js",
  "license": "MIT",
  "readme": "# udid\n\nReturn a string that uniquely identifies the current device, for a given app.\n\nExtremely useful for distributed systems.\n\ntries the current approaches:\n\n  * sha1sum of user's public ssh public key\n  * create random uuid and save it in `~/.udid`\n  * on the browser, fallback to [count-tabs](https://github.com/dominictarr/count-tabs)\n\nthe only configuration is your app name.\n\nsee [http://arstechnica.com/apple/2012/09/ask-ars-whats-the-big-deal-with-iphone-udids/]\n(Ask Ars: What's the big deal with iPhone UDIDs?)\n\n## example\n\n``` js\n\nvar udid = require('udid')('appname')\n\nconsole.log(udid)\n```\n\n# todo\n\n  * UDID on phones, etc for phonegap, etc.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "description": "Return a string that uniquely identifies the current device, for a given app.",
  "bugs": {
    "url": "https://github.com/dominictarr/udid/issues"
  },
  "_id": "udid@0.1.4",
  "dist": {
    "shasum": "91911cbee17c21ba0ad2474d5517dafce54eb80b"
  },
  "_from": "udid@",
  "_resolved": "https://registry.npmjs.org/udid/-/udid-0.1.4.tgz"
}
